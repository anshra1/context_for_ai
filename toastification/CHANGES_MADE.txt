# Documentation of Changes Made

This document provides a detailed log of all the changes that have been made to the `toastification` package to implement the new desktop notification feature.

## 1. Introduction

A new desktop notification feature has been added to the `toastification` package. This feature allows you to show beautiful and customizable in-app notifications that are specifically designed for desktop applications.

## 2. New Files Created

*   `lib/toast_src/desktop/desktop_config.dart`: This file contains the `DesktopConfig` class, which holds all the configuration options for desktop notifications.
*   `lib/toast_src/desktop/desktop_toast_style.dart`: This file contains the `DesktopToastStyle` enum, which defines the pre-built styles for desktop notifications.
*   `lib/toast_src/desktop/desktop_toast_widget.dart`: This file contains the `DesktopToastWidget`, which is the widget that renders the desktop notifications.
*   `DESKTOP_GUIDE.md`: This file contains a detailed guide on how to use the new desktop notification feature.

## 3. Modified Files

*   `lib/toast_src/core/toastification_config.dart`: The `ToastificationConfig` class has been enhanced to include a `desktopConfig` field. This allows you to provide a global configuration for desktop notifications.
*   `lib/toast_src/core/toastification.dart`: The `Toastification` class has been updated with a new `showDesktopNotification` method. This method is used to show desktop notifications.
*   `lib/toast_src/core/toastification_callbacks.dart`: The `ToastificationCallbacks` class has been updated to include a new `onShown` callback.
*   `lib/toast_src/core/toastification_manager.dart`: The `ToastificationManager` class has been updated to call the `onShown` callback when a notification is shown.
*   `lib/toastification.dart`: This file has been updated to export the new desktop-related files.
*   `example/lib/src/core/views/widgets/drop_down.dart`: Fixed a deprecated member use.
*   `example/lib/src/features/home/views/widgets/customization_panel.dart`: Added a button to the example app to demonstrate the new desktop notification feature.

## 4. Summary of New Features

*   **Theming and Customization:** You can now provide a global theme for all your desktop notifications using the `DesktopConfig` class.
*   **Pre-built Styles:** You can use the `DesktopToastStyle` enum to easily show different types of notifications (`info`, `success`, `warning`, `error`).
*   **Progress Bar:** You can show a progress bar that indicates the remaining time before the notification closes.
*   **Hover Effects:** You can pause the auto-close timer and show the close button when the user hovers over the notification.
*   **Lifecycle Callbacks:** You can use the `ToastificationCallbacks` to listen for events in the notification's lifecycle.

## 5. How to Use the New Feature

To show a desktop notification, you can use the `showDesktopNotification` method on the `toastification` instance:

```dart
toastification.showDesktopNotification(
  title: 'New Message',
  description: 'You have a new message from John Doe.',
);
```

For more detailed information, please refer to the `DESKTOP_GUIDE.md` file.
